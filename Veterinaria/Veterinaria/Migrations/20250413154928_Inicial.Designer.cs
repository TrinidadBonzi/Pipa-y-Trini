// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Veterinaria.Datos;

#nullable disable

namespace Veterinaria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413154928_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("en_US.UTF-8")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Animal", b =>
                {
                    b.Property<int>("idAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAnimal"));

                    b.Property<int?>("DuenioidDuenio")
                        .HasColumnType("int");

                    b.Property<int>("edadAnimal")
                        .HasColumnType("int");

                    b.Property<int?>("idDuenio")
                        .HasColumnType("int");

                    b.Property<string>("nombreAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razaAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAnimal")
                        .HasName("PK_ID_ANIMAL");

                    b.HasIndex("DuenioidDuenio");

                    b.HasIndex("idDuenio");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Atencion", b =>
                {
                    b.Property<int>("idAtencion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAtencion"));

                    b.Property<int?>("AnimalidAnimal")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaAtencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaRegistroAtencion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idAnimal")
                        .HasColumnType("int");

                    b.Property<string>("medicamentoAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motivoAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tratamientoAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAtencion")
                        .HasName("PK_ID_ATENCION");

                    b.HasIndex("AnimalidAnimal");

                    b.HasIndex("idAnimal");

                    b.ToTable("Atenciones");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Duenio", b =>
                {
                    b.Property<int>("idDuenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDuenio"));

                    b.Property<string>("apellidoDuenio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dniDuenio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreDuenio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idDuenio")
                        .HasName("PK_ID_DUENIO");

                    b.ToTable("Duenios");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Animal", b =>
                {
                    b.HasOne("Veterinaria.Datos.Entidades.Duenio", null)
                        .WithMany("Animales")
                        .HasForeignKey("DuenioidDuenio");

                    b.HasOne("Veterinaria.Datos.Entidades.Duenio", "duenio")
                        .WithMany()
                        .HasForeignKey("idDuenio");

                    b.Navigation("duenio");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Atencion", b =>
                {
                    b.HasOne("Veterinaria.Datos.Entidades.Animal", null)
                        .WithMany("Atenciones")
                        .HasForeignKey("AnimalidAnimal");

                    b.HasOne("Veterinaria.Datos.Entidades.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("idAnimal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Animal", b =>
                {
                    b.Navigation("Atenciones");
                });

            modelBuilder.Entity("Veterinaria.Datos.Entidades.Duenio", b =>
                {
                    b.Navigation("Animales");
                });
#pragma warning restore 612, 618
        }
    }
}
